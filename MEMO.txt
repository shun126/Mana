Manaコンパイラ プログラム メモ

stackの構造
　一般的なスタックの構造と違うので注意が必要です。
可変長の値をpush/popするので普通ならば++sp/sp--となるところですが、sp++/--spと反対になっています。

+--------------------+
| integer            |
+--------------------+
| float              |
+--------------------+
| 12bytes data       |
|                    |
|                    |
+--------------------+ <=sp

local memory bufferの構造
　一般的なバッファの構造とは反対です。fpからオフセットを引いた値が実アドレスになります。

+--------------------+
| -12 parameter 2    |
+--------------------+
| -8  parameter 1    |
+--------------------+
| -4  return address |
+--------------------+ <=fp



課題

・actor/structのメンバー管理に無茶苦茶なキャストを使用している。

・ツリー構造の拡張
　　以前自作したインタープリタの様なツリーを構築し最適化の効率を上げる。
　　式の評価用ツリーの拡張で、ある程度対応できると思われる。

・命令の拡張
　　＋１など非常に頻度の高い命令セットを単一の命令を新設してそれに置き換える。

・aliasとintegerの型判定を別々にする。integerと衝突してエラーを発見できない。

--------------------------------------------------------------------------------
メモ

static変数の扱いについて
本来static変数はどのスコープからでも利用できるが、Manaではstatic変数はゲームのセーブデータとして利用されるため変数の割り当てアドレスが開発中に移動してほしくない。
そこでグローバル領域にまとめ、origin命令によって可能な限りアドレスが変更されないようにしています。

--------------------------------------------------------------------------------
hashとframeのシリアライズと内部のポインターの問題
actorやsender,string

スタックやフレーム内のアクターへのポインターをIDから検索するようにする。

シリアライズ対応に対して解決しなければならないポインター
mana.h
-mana
-actor* map_actor
-actor* player_actor


mana_actor.h
-mana_interrupt
-actor* sender
-void* file_callback_parameter
-char* action_name [debug]

-mana_return_value
-char* string_value
-void* pointer_value
-actor* actor_value

-mana_actor
-mana* parent
char* name [debug]

--------------------------------------------------------------------------------
