/*
 * mana (script)
 * Copyright (c) 2003 Shun Moriya <shun@mnu.sakura.ne.jp>
 */

/*
void test_sort(short array[16], int size)
{
	char hoge[10][10];
	hoge = hoge;
}

void test()
{
	short array[16];
	short a = 16;
	a = array[1];
	array[2] = a;
	test_sort(array, a);
}

actor TestActor
{
	action init;
	action main;
}

action TestActor::init
{
	test();
}

action TestActor::main
{
}
*/

include "sample.mh";

// global variables
float realValue;
int digitValue;
TestStruct structValue;

int test_sort(short array[10], int size)
{
	print("before\n");
	for(int i = 0; i < size; i++)
	{
		array[i] = size - i;
		print("%d: %d\n", i, array[i]);
	}

	int count = 0;
	int finish;
	do{
		finish = true;
		for(int i = 0; i < size - 1; i++)
		{
			if(array[i] > array[i + 1])
			{
				short tmp = array[i];
				array[i] = array[i + 1];
				array[i + 1] = tmp;
				finish = false;
			}
		}
		count++;
	}while(!finish);

	print("after\n");
	for(int i = 0; i < size; i++)
	{
		print("%d: %d\n", i, array[i]);
	}

	return count;
}

void test_switch_while()
{
	int count = 4;
	while(count)
	{
		switch(count)
		{
		case 1:
			print("one\n");
			break;
		case 2:
			print("two\n");
			break;
		case 3:
			print("three\n");
			break;
		default:
			print("ready\n");
		}
		count--;
	}
}

// actor defines
action TestActor::init
{
	short array[10];
	print("test_sort: %d\n", test_sort(array, 10));

	int localVariableInAction;
	float arrayTest[10];

	test_switch_while();

	staticDigitValue = 1;

	pointer p;
	pointer q;
	p = getUserPointer();
	q = p;
	setUserPointer(p);
}

action TestActor::main
{
	request(1, OtherTestActor::talk);
	request(2, OtherTestActor, "talk");
	request(5, self::talk);
	join(0, OtherTestActor);
}

action TestActor::talk
{
vec2 test;
test.x = 0;
	print("Nin hao!\n");
}

action OtherTestActor::talk
{
	vec2 test;
	float f;
	f = test.x;
	print("Hello!\n");
	yield();
	getUserData();
}

module Battle
{
	action init;
}

action Battle::init
{
}

phantom Aa
{
	action init;
}

action Aa::init
{
}

actor Director
{
	extend Battle;
}
