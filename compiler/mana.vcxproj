<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{B50EF429-D756-4CAC-8B79-9757BDAF66D3}</ProjectGuid>
    <RootNamespace>mana</RootNamespace>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>14.0.23107.0</_ProjectFileVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;_CRTDBG_MAP_ALLOC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>
      </MinimalRebuild>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PrecompiledHeader />
      <WarningLevel>Level4</WarningLevel>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <AdditionalIncludeDirectories>
      </AdditionalIncludeDirectories>
      <AdditionalOptions>/source-charset:utf-8 %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <TargetMachine>MachineX86</TargetMachine>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN64;_DEBUG;_CONSOLE;_CRTDBG_MAP_ALLOC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalIncludeDirectories>
      </AdditionalIncludeDirectories>
      <AdditionalOptions>/source-charset:utf-8 %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <MinimalRebuild />
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <Optimization>Full</Optimization>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <PrecompiledHeader />
      <WarningLevel>Level4</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalIncludeDirectories>
      </AdditionalIncludeDirectories>
      <AdditionalOptions>/source-charset:utf-8 %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <MinimalRebuild />
    </ClCompile>
    <Link>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <TargetMachine>MachineX86</TargetMachine>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <Optimization>Full</Optimization>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN64;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalIncludeDirectories>
      </AdditionalIncludeDirectories>
      <AdditionalOptions>/source-charset:utf-8 %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <MinimalRebuild />
    </ClCompile>
    <Link>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="Parser.yy">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">if defined GNU_BISON_BIN (
 if exist "$(GNU_BISON_BIN)" (
  $(GNU_BISON_BIN) -d -o "%(Filename).cpp" "%(Identity)"
 ) else (
  echo The gnu bison was not found.
 )
) else (
  echo Define the gnu bison file name in environment variable GNU_BISON_BIN
)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">generate C++ code from yacc file ...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">%(RootDir)%(Directory)\%(Filename).cpp;%(Outputs)</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">if defined GNU_BISON_BIN (
 if exist "$(GNU_BISON_BIN)" (
  $(GNU_BISON_BIN) -d -o "%(Filename).cpp" "%(Identity)"
 ) else (
  echo The gnu bison was not found.
 )
) else (
  echo Define the gnu bison file name in environment variable GNU_BISON_BIN
)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">generate C++ code from yacc file ...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">%(RootDir)%(Directory)\%(Filename).cpp;%(Outputs)</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">if defined GNU_BISON_BIN (
 if exist "$(GNU_BISON_BIN)" (
  $(GNU_BISON_BIN) -d -o "%(Filename).cpp" "%(Identity)"
 ) else (
  echo The gnu bison was not found.
 )
) else (
  echo Define the gnu bison file name in environment variable GNU_BISON_BIN
)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">generate C++ code from yacc file ...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(RootDir)%(Directory)\%(Filename).cpp;%(Outputs)</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">if defined GNU_BISON_BIN (
 if exist "$(GNU_BISON_BIN)" (
  $(GNU_BISON_BIN) -d -o "%(Filename).cpp" "%(Identity)"
 ) else (
  echo The gnu bison was not found.
 )
) else (
  echo Define the gnu bison file name in environment variable GNU_BISON_BIN
)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">generate C++ code from yacc file ...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(RootDir)%(Directory)\%(Filename).cpp;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="Version.json">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">if defined PYTHON_BIN (
 if exist $(PYTHON_BIN) (
  echo $(PYTHON_BIN) Version.py
  $(PYTHON_BIN) Version.py
 ) else (
  echo The python was not found.
  echo PYTHON_BIN=$(PYTHON_BIN)
 )
)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">if defined PYTHON_BIN (
 if exist $(PYTHON_BIN) (
  echo $(PYTHON_BIN) Version.py
  $(PYTHON_BIN) Version.py
 ) else (
  echo The python was not found.
  echo PYTHON_BIN=$(PYTHON_BIN)
 )
)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">if defined PYTHON_BIN (
 if exist $(PYTHON_BIN) (
  echo $(PYTHON_BIN) Version.py
  $(PYTHON_BIN) Version.py
 ) else (
  echo The python was not found.
  echo PYTHON_BIN=$(PYTHON_BIN)
 )
)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">if defined PYTHON_BIN (
 if exist $(PYTHON_BIN) (
  echo $(PYTHON_BIN) Version.py
  $(PYTHON_BIN) Version.py
 ) else (
  echo The python was not found.
  echo PYTHON_BIN=$(PYTHON_BIN)
 )
)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generate version header file</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generate version header file</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generate version header file</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generate version header file</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Version.h</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Version.h</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Version.h</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Version.h</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Version.py</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Version.py</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Version.py</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Version.py</AdditionalInputs>
    </CustomBuild>
    <None Include="..\runner\Actor.inl" />
    <None Include="..\runner\Buffer.inl" />
    <None Include="..\runner\common\OutputStream.inl" />
    <None Include="..\runner\Plugin.inl" />
    <None Include="..\runner\Stack.inl" />
    <None Include="..\runner\VM.inl" />
    <CustomBuild Include="Lexer.l">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">if defined GNU_FLEX_BIN (
 if exist "$(GNU_FLEX_BIN)" (
  "$(GNU_FLEX_BIN)" -8 -o"%(Filename).cpp" "%(Identity)"
 ) else (
  echo The gnu flex was not found.
 )
) else (
  echo Define the gnu flex file name in environment variable GNU_FLEX_BIN
)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">if defined GNU_FLEX_BIN (
 if exist "$(GNU_FLEX_BIN)" (
  "$(GNU_FLEX_BIN)" -8 -o"%(Filename).cpp" "%(Identity)"
 ) else (
  echo The gnu flex was not found.
 )
) else (
  echo Define the gnu flex file name in environment variable GNU_FLEX_BIN
)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">if defined GNU_FLEX_BIN (
 if exist "$(GNU_FLEX_BIN)" (
  "$(GNU_FLEX_BIN)" -8 -o"%(Filename).cpp" "%(Identity)"
 ) else (
  echo The gnu flex was not found.
 )
) else (
  echo Define the gnu flex file name in environment variable GNU_FLEX_BIN
)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">if defined GNU_FLEX_BIN (
 if exist "$(GNU_FLEX_BIN)" (
  "$(GNU_FLEX_BIN)" -8 -o"%(Filename).cpp" "%(Identity)"
 ) else (
  echo The gnu flex was not found.
 )
) else (
  echo Define the gnu flex file name in environment variable GNU_FLEX_BIN
)</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">%(RootDir)%(Directory)\%(Filename).cpp;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">%(RootDir)%(Directory)\%(Filename).cpp;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(RootDir)%(Directory)\%(Filename).cpp;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(RootDir)%(Directory)\%(Filename).cpp;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">generate C++ code from lex file ...</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">generate C++ code from lex file ...</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">generate C++ code from lex file ...</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">generate C++ code from lex file ...</Message>
    </CustomBuild>
    <None Include="LexerDeclaration.inl" />
    <None Include="LexerDefinition.inl" />
    <None Include="LexerPrivateFunction.inl" />
    <None Include="ParserDeclaration.inl" />
    <None Include="ParserDefinition.inl" />
    <None Include="Version.py">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
      </ExcludedFromBuild>
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
      </DeploymentContent>
      <FileType>Document</FileType>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
      </ExcludedFromBuild>
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
      </DeploymentContent>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </ExcludedFromBuild>
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </DeploymentContent>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
      </ExcludedFromBuild>
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
      </DeploymentContent>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">if defined PYTHON_BIN (
 if exist "$(PYTHON_BIN)" (
  $(PYTHON_BIN) "%(Identity)"
 ) else (
  echo The python was not found.
 )
)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generate version.h file</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">if defined PYTHON_BIN (
 if exist "$(PYTHON_BIN)" (
  $(PYTHON_BIN) "%(Identity)"
 ) else (
  echo The python was not found.
 )
)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generate version.h file</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">if defined PYTHON_BIN (
 if exist "$(PYTHON_BIN)" (
  $(PYTHON_BIN) "%(Identity)"
 ) else (
  echo The python was not found.
 )
)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generate version.h file</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">if defined PYTHON_BIN (
 if exist "$(PYTHON_BIN)" (
  $(PYTHON_BIN) "%(Identity)"
 ) else (
  echo The python was not found.
 )
)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generate version.h file</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Version.h</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Version.h</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Version.h</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Version.h</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Version.json</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Version.json</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Version.json</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Version.json</AdditionalInputs>
    </None>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\runner\Actor.h" />
    <ClInclude Include="..\runner\Buffer.h" />
    <ClInclude Include="..\runner\common\Assert.h" />
    <ClInclude Include="..\runner\common\FileFormat.h" />
    <ClInclude Include="..\runner\common\Math.h" />
    <ClInclude Include="..\runner\common\Memory.h" />
    <ClInclude Include="..\runner\common\Noncopyable.h" />
    <ClInclude Include="..\runner\common\OutputStream.h" />
    <ClInclude Include="..\runner\common\Platform.h" />
    <ClInclude Include="..\runner\common\Setup.h" />
    <ClInclude Include="..\runner\common\Stopwatch.h" />
    <ClInclude Include="..\runner\common\String.h" />
    <ClInclude Include="..\runner\common\Type.h" />
    <ClInclude Include="..\runner\Event.h" />
    <ClInclude Include="..\runner\Function.h" />
    <ClInclude Include="..\runner\Mana.h" />
    <ClInclude Include="..\runner\Plugin.h" />
    <ClInclude Include="..\runner\Stack.h" />
    <ClInclude Include="..\runner\VM.h" />
    <ClInclude Include="CodeBuffer.h" />
    <ClInclude Include="CodeGenerator.h" />
    <ClInclude Include="DataBuffer.h" />
    <ClInclude Include="ErrorHandler.h" />
    <ClInclude Include="GlobalAddressResolver.h" />
    <ClInclude Include="GlobalSemanticAnalyzer.h" />
    <ClInclude Include="IntermediateLanguage.h" />
    <ClInclude Include="Lexer.h" />
    <ClInclude Include="LocalAddressResolver.h" />
    <ClInclude Include="LocalSemanticAnalyzer.h" />
    <ClInclude Include="Main.h" />
    <ClInclude Include="Parser.hpp" />
    <ClInclude Include="ParsingDriver.h" />
    <ClInclude Include="Path.h" />
    <ClInclude Include="Runner.h" />
    <ClInclude Include="SemanticAnalyzer.h" />
    <ClInclude Include="StringPool.h" />
    <ClInclude Include="Symbol.h" />
    <ClInclude Include="SymbolFactory.h" />
    <ClInclude Include="SyntaxNode.h" />
    <ClInclude Include="TypeDescriptor.h" />
    <ClInclude Include="TypeDescriptorFactory.h" />
    <ClInclude Include="Version.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="CodeBuffer.cpp" />
    <ClCompile Include="CodeGenerator.cpp" />
    <ClCompile Include="DataBuffer.cpp" />
    <ClCompile Include="ErrorHandler.cpp" />
    <ClCompile Include="GlobalAddressResolver.cpp" />
    <ClCompile Include="GlobalSemanticAnalyzer.cpp" />
    <ClCompile Include="IntermediateLanguage.cpp" />
    <ClCompile Include="Lexer.cpp">
      <AdditionalIncludeDirectories Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.</AdditionalIncludeDirectories>
      <AdditionalIncludeDirectories Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.</AdditionalIncludeDirectories>
      <AdditionalIncludeDirectories Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.</AdditionalIncludeDirectories>
      <AdditionalIncludeDirectories Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.</AdditionalIncludeDirectories>
    </ClCompile>
    <ClCompile Include="LocalAddressResolver.cpp" />
    <ClCompile Include="LocalSemanticAnalyzer.cpp" />
    <ClCompile Include="Main.cpp" />
    <ClCompile Include="Parser.cpp" />
    <ClCompile Include="ParsingDriver.cpp" />
    <ClCompile Include="Path.cpp" />
    <ClCompile Include="Runner.cpp" />
    <ClCompile Include="SemanticAnalyzer.cpp" />
    <ClCompile Include="StringPool.cpp" />
    <ClCompile Include="Symbol.cpp" />
    <ClCompile Include="SymbolFactory.cpp" />
    <ClCompile Include="SyntaxNode.cpp" />
    <ClCompile Include="TypeDescriptor.cpp" />
    <ClCompile Include="TypeDescriptorFactory.cpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>